<?php

namespace common\models;

use Yii;
use common\models\PanoramicList;

/**
 * This is the model class for table "{{%panoramic}}".
 *
 * @property integer $id
 * @property integer $member_id
 * @property integer $shop_id
 * @property integer $template
 * @property integer $showlogo
 * @property integer $custom_logo
 * @property integer $status
 * @property integer $process_percent
 * @property integer $created_at
 */
class Panoramic extends \yii\db\ActiveRecord
{
    public $checkbox = array();
    public $defaultMask = '/images/mask.png';
    public $defaultIcon = 'http://pano.taagoo.com/static/player/1.19-pr6/system-icon/link.png';
    public $defaultImg = '/images/lazy.png';
    public $defaultLogo = '/images/logo1.png';
    public $openAlert = '/images/openalert.png';
    public $sceneFix = 'scene_';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%panoramic}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [

        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'member_id' => '所属用户',
            'shop_id' => '商铺ID',
            'template' => '模板',
            'showlogo' => '是否显示logo',
            'custom_logo' => 'logo ID',
            'status' => '状态',
            'process_percent' => '发布进度',
            'created_at' => '创建日期',
        ];
    }

    public function beforeValidate()
    {
        if ($this->scenario != 'default' && $this->scenario != 'search') {
            if ($this->isNewRecord) {
                $this->created_at = time();
            }
        }
        return parent::beforeValidate();
    }


    /**
     * 场景设置
     * @return  {[type]} [description]
     * @version 1.0      2015-12-31T15:48:46+0800
     * @author cnzhangxl@foxmail.com
     */
    public function scenarios()
    {
        return [
            'create' => ['member_id', 'shop_id', 'showlogo', 'custom_logo', 'status', 'process_percent', 'created_at'],
        ];
    }

    /**
     * 获取用户信息
     * @date   2016-03-24T10:53:02+0800
     * @author cnzhangxl@foxmail.com
     * @return [type]                   [description]
     */
    public function getMember()
    {
        return $this->hasOne('common\models\Member', ['id' => 'member_id']);
    }

    /**
     * 动景播放json
     * @param $id integer 动景id
     * @return $returnData [array]
     */
    public static function getPlayJson($id)
    {
        $returnData = [];
        $pano = Panoramic::findOne($id);

        $returnData['name'] = $pano->title;
        $returnData['lng'] = $pano->lng;
        $returnData['lat'] = $pano->lat;
        $returnData['address'] = $pano->address;
        $returnData['summary'] = $pano->summary;
        $returnData['thumb_path'] = $pano->getThumbs($pano)['default'];
        $returnData['play_rules'] = $pano->play_rules;//小行星开场
        $returnData['thumbs_opened'] = $pano->thumbs_opened;//打开缩略图
        $returnData['autorotate'] = $pano->autorotate;//自动旋转
        $returnData['flag_publish'] = $pano->flag_publish; // 发布全景
        $returnData['footmark'] = $pano->footmark; // 足迹
        $returnData['gyro'] = $pano->gyro; // 手机陀螺仪
        $returnData['comment'] = $pano->comment; // 显示说一说
        $returnData['showlogo'] = $pano->showlogo; // 显示logo
        $returnData['showuser'] = $pano->showuser; // 作者名
        $returnData['showviewnum'] = $pano->showviewnum; // 人气
        $returnData['showvrglasses'] = $pano->showvrglasses; // VR眼镜
        $returnData['showprofile'] = $pano->showprofile; // 简介
        $returnData['showpraise'] = $pano->showpraise; // 点赞
        $returnData['showshare'] = $pano->showshare;// 分享
        $returnData['sand_table']['isOpen'] = $pano->radar_mapstatus; //沙盘
        $returnData['sand_table']['sandTables'] = SandTable::getSandTable($pano);
        $returnData['scene_group']['sceneGroups'] = PanoramicAtlas::getGroup($pano->id);
        $returnData['angle_of_view'] = [];
        $returnData['hotspot'] = [];
        $sceneList = PanoramicList::find()->where(['panoramic_id' => $id, 'status' => 1])->orderBy('sort_val asc')->all();
        $bg_music = [];
        $speech_explain = [];
        $sky_land_shade = [];
        foreach ($sceneList as $key => $row) {
            $angle_of_view['sceneName'] = $pano->sceneFix . $row->panoramic_material_id;
            $hotspot = [];
            $sand_table = [];
            $comment = [];
            $special_effects = [];
            $panoramicMaterial = $row->panoramicMaterial;
            $returnData['scene_list'][$key]['id'] = $row->id;
            $returnData['scene_list'][$key]['sceneName'] = $angle_of_view['sceneName'];
            $returnData['scene_list'][$key]['scene_id'] = $panoramicMaterial->id;
            $returnData['scene_list'][$key]['scene_title'] = $row->getTitle()['default'];
            $returnData['scene_list'][$key]['thumbPath'] = $panoramicMaterial->getThumbs()['default'];
            if ($panoramicMaterial->status != 4 && $panoramicMaterial->status != 6) {
                $angle_of_view['hlookat'] = $row->hlookat;
                $angle_of_view['vlookat'] = $row->vlookat;
                $angle_of_view['fov'] = $row->fov;
                $angle_of_view['fovmin'] = $row->fovmin;
                $angle_of_view['fovmax'] = $row->fovmax;
                $angle_of_view['vlookatmin'] = $row->vlookatmin;
                $angle_of_view['vlookatmax'] = $row->vlookatmax;
                $angle_of_view['keepView'] = $row->autorotate_horizon;
                $angle_of_view['hlookatmin'] = $row->hlookatmin;
                $angle_of_view['hlookatmax'] = $row->hlookatmax;
                $hotspot = PanoHot::getHotspot($row->id);
                $special_effects['sceneName'] = $angle_of_view['sceneName'];
                $special_effects['effectId'] = $row->wonder_id;
                if ($row->wonder_id != 0) { // 特效
                    $special_effects['isOpen'] = $row->wonder_open == 1 ? true : false;

                    $special_effects['effectType'] = $row->wonder_type == 1 ? PanoramicList::getWonder()[$row->wonder_id]['onstart'] : 'custom';
                    $special_effects['type'] = $row->wonder_type;
                    if ($row->wonder_type == 2) {
                        $special_effects['imageUrl'] = Yii::$app->params['oss_domain'] . PanoramicImges::getImgUrl($row->wonder_id);
                    }
                }
                if ($pano->music_type == 2) {
                    $music['mediaID'] = $row->audio_id;
                    $music['sceneID'] = $row->panoramic_material_id;
                    if ($row->audio_id != 0) {
                        $music_id = $row->audio;
                        $music['mediaUrl'] = $music_id->getAudioUrl($music_id);
                        $music['mediaTitle'] = $music_id->title;
                    }
                    $bg_music[] = $music;
                    unset($music);
                }

                if ($pano->commentary_type == 2) {
                    $music['mediaID'] = $row->commentary_id;
                    $music['sceneID'] = $row->panoramic_material_id;
                    if ($row->commentary_id != 0) {
                        $music_id = $row->commentary;
                        $music['mediaUrl'] = $music_id->getAudioUrl($music_id);
                        $music['mediaTitle'] = $music_id->title;
                    }
                    $speech_explain[] = $music;
                    unset($music);
                }

                if ($pano->mask == 2) {

                    $mask['useShade'] = $row->mask_id;
                    $mask['type'] = $row->mask_type;
                    $mask['sceneID'] = $angle_of_view['sceneName'];
                    $mask['size'] = $row->mask_size;
                    if ($row->mask_id != 0) {
                        $mask_id = $row->maskPic;
                        $mask['imgPath'] = $row->mask_id == -1 ? $pano->defaultMask : $mask_id->getThumbs($mask_id)['default'];
                    }
                    $sky_land_shade[] = $mask;
                    unset($mask);
                }
                $comment = $row->getComment();
            } else {
                $angle_of_view['hlookat'] = 0;
                $angle_of_view['vlookat'] = 0;
                $angle_of_view['fov'] = 95;
                $angle_of_view['fovmin'] = 5;
                $angle_of_view['fovmax'] = 120;
                $angle_of_view['vlookatmin'] = 90;
                $angle_of_view['vlookatmax'] = -90;
                $angle_of_view['keepView'] = 0;
                $angle_of_view['hlookatmin'] = -180;
                $angle_of_view['hlookatmax'] = 180;
            }
            $returnData['angle_of_view'][] = $angle_of_view;
            $returnData['hotspot'][$angle_of_view['sceneName']] = $hotspot;
            $returnData['commentInfo'][$angle_of_view['sceneName']] = $comment;
            $returnData['special_effects']['effectSettings'][] = $special_effects;
        }
        $returnData['bg_music']['isWhole'] = $pano->music_type;
        if ($pano->music_type == 1) { // 背景音乐
            $returnData['bg_music']['sceneSettings'][0]['mediaID'] = $pano->global_music;
            if ($pano->global_music != 0) {
                $music = $pano->audio;
                $returnData['bg_music']['sceneSettings'][0] = array(
                    "mediaID" => $pano->global_music,
                    "mediaUrl" => $music->getAudioUrl($music),
                    "mediaTitle" => $music->title
                );
            }
        } else {
            $returnData['bg_music']['sceneSettings'] = $bg_music;
        }

        $returnData['speech_explain']['isWhole'] = $pano->commentary_type;
        if ($pano->commentary_type == 1) { // 解说
            $returnData['speech_explain']['sceneSettings'][0]["mediaID"] = $pano->global_commentary;
            if ($pano->global_commentary != 0) {
                $music = $pano->commentary;
                $returnData['speech_explain']['sceneSettings'][0] = array(
                    "mediaID" => $pano->global_commentary,
                    "mediaUrl" => $music->getAudioUrl($music),
                    "mediaTitle" => $music->title
                );
            }
        } else {
            $returnData['speech_explain']['sceneSettings'] = $speech_explain;
        }
        // custom_right_button 自定义按钮
        $returnData['custom_right_button']['linkSettings'] = [];
        foreach ($pano->getCustomIcon() as $key => $iconVal) {
            $iconData['title'] = $iconVal->title;
            $iconData['icon_id'] = $iconVal->icon_id;
            $iconData['icon'] = $iconVal->icon_id == -1 ? $pano->defaultIcon : $iconVal->getIcon();
            $iconData['icon_type'] = $iconVal->icon_type == 2 ? 'custom' : 'system';
            $iconData['type'] = $iconVal->type;
            if ($iconVal->type == 3) {
                $iconData['address'] = $iconVal->address;
                $iconData['lat'] = $iconVal->lat;
                $iconData['lng'] = $iconVal->lng;
            } else {
                $iconData['content'] = $iconVal->content;
            }
            $returnData['custom_right_button']['linkSettings'][] = $iconData;
        }

        //遮罩
        $returnData['sky_land_shade']['isWhole'] = $pano->mask;
        if ($pano->mask == 1) {

            $returnData['sky_land_shade']['shadeSetting'][0] = array(
                "useShade" => $pano->mask_id,
                "type" => $pano->mask_type,
                "size" => $pano->mask_size
            );
            if ($pano->mask_id != 0) {
                $music = $pano->maskPic;
                $returnData['sky_land_shade']['shadeSetting'][0]["imgPath"] = $pano->mask_id == -1 ? $pano->defaultMask : $music->getThumbs($music)['default'];
            }
        } else {
            $returnData['sky_land_shade']['shadeSetting'] = $sky_land_shade;
        }
        // 开场提示
        $openAlert['iconID'] = $pano->opening_tips;
        if ($openAlert['iconID'] != 0) {
            $openAlert['imgPath'] = $openAlert['iconID'] == -1 ? $pano->openAlert : $pano->openingTips->getThumbs($pano->openingTips)['default'];
        }
        $returnData['openAlert'] = $openAlert;
        // 自定义logo
        $customLogo['useCustomLogo'] = $pano->custom_logo;
        $customLogo['logoLink'] = 'http://we.taagoo.com';
        $customLogo['imgPath'] = $customLogo['useCustomLogo'] == 0 ? $pano->defaultLogo : $pano->customLogo->getThumbs($pano->customLogo)['default'];
        $returnData['custom_logo'] = $customLogo;

        // 启动画面
        $loadingImg['useLoadingImg'] = $pano->custom_logo;
        if ($loadingImg['useLoadingImg'] != 0) {
            $loadingImg['lodingImgPath'] = $loadingImg['useLoadingImg'] == -1 ? $pano->defaultLogo : $pano->customLogo->getThumbs($pano->customLogo)['default'];
        }
        $returnData['loading_img'] = $loadingImg;
        $tour_guide['useStartImg'] = $pano->use_start_img != 0 ? 1 : 0;
        $tour_guide['useEndImg'] = $pano->use_end_img != 0 ? 1 : 0;
        $tour_guide['startImgUrl'] = $pano->use_start_img != 0 ? $pano->startImg : '';
        $tour_guide['endImgUrl'] = $pano->use_end_img != 0 ? $pano->endImg : '';
        $tour_guide['points'] = TourGuide::getTourGuide($pano->id);
        $returnData['tour_guide'] = $tour_guide;
        $countNum = $pano->getCounterNum($pano->id);
        // 点赞数
        $returnData['praiseNum'] = $countNum['praise'];
        //人气数
        $returnData['counterNum'] = $countNum;

        return $returnData;
    }

    /**
     * 添加动景
     * @param $shop_id string 店铺ID
     * @return mixed
     */
    public static function createPanoramic($shop_id)
    {
        $panoramicModel = self::findOne(['shop_id'=>$shop_id,'status'=>1]);
        if(!$panoramicModel){
            $panoramicModel = new self();
            $panoramicModel->scenario = 'create';
            $panoramicModel->member_id = Yii::$app->user->id;
            $panoramicModel->shop_id = $shop_id;
            $panoramicModel->template = 1; // 默认模板
            if(!$panoramicModel->save()){
                return false;
            }
        }
        return $panoramicModel;
    }
}
