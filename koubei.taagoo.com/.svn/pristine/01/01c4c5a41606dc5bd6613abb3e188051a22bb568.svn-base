<?php
namespace console\controllers;

use common\models\KoubeiServiceMarketOrder;
use Yii;
use yii\console\Controller;
use common\models\AliOpen;
use common\models\Category;
use common\models\CategoryRelation;
use common\models\Shop;
use common\models\Voucher;

class KoubeiShopController extends Controller
{
    //同步商圈店铺列表
    public function actionSyncShop()
    {
        $aop = AliOpen::getAopObj();
        $request = new \AlipayOfflineMarketShopSummaryBatchqueryRequest ();

        $list = KoubeiServiceMarketOrder::find()->all();
        foreach ($list as $item) {
            echo "koubei-service-market-order    id:" . $item->id . "\r\n";
            $page = 1;
            $b = true;
            while ($page) {
                echo "shop-list     page:" . $page . "\r\n";
                $request->setBizContent("{" .
                    "    \"op_role\":\"ISV\"," .
                    "    \"shop_id\":\"" . $item->shop_id . "\"," .
                    "    \"query_type\":\"MALL_RELATION\"," .
                    "    \"page_no\":" . $page . "," .
                    "    \"page_size\":50" .
                    "  }");
                $resultAccept = $aop->execute($request, '', $item->member->app_auth_token);
                $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
                $resultCode = $resultAccept->$responseNode->code;
                if (!empty($resultCode) && $resultCode == 10000) {
//                    if($resultAccept->$responseNode->total_items==Shop::find()->where(['merchant_pid'=>$item->merchant_pid])->count()){
//                        break;
//                    }
                    if (isset($resultAccept->$responseNode->shop_summary_infos)) {
                        foreach ($resultAccept->$responseNode->shop_summary_infos as $shop) {

                            $shopModel = Shop::findOne($shop->shop_id);
                            if ($shopModel) {
                                $shopModel->scenario = 'update';
                            } else {
                                $shopModel = new Shop(['scenario' => 'create']);
                                $shopModel->shop_id = $shop->shop_id;
                            }
                            if ($shopModel->action_param) {
                                continue;
                            }
                            $shopModel->merchant_pid = $item->merchant_pid;
                            $shopModel->gmt_create = $shop->gmt_create;
                            $shopModel->status = $shop->status;
                            $shopModel->star = isset($shop->shop_comment_info->star) ? $shop->shop_comment_info->star : 0;
                            $shopModel->score = isset($shop->shop_comment_info->score) ? $shop->shop_comment_info->score : 0;
                            $shopModel->province_code = $shop->province_code;
                            $shopModel->city_code = $shop->city_code;
                            $shopModel->district_code = $shop->district_code;
                            $shopModel->pic_coll = $shop->pic_coll;
                            $shopModel->brand_name = $shop->brand_name;
                            $shopModel->main_image = $shop->main_image;
                            $shopModel->shop_type = $shop->shop_type;
                            $shopModel->main_shop_name = $shop->main_shop_name;
                            $shopModel->address = $shop->address;
                            $shopModel->longitude = $shop->longitude;
                            $shopModel->latitude = $shop->latitude;
                            $shopModel->branch_shop_name = isset($shop->branch_shop_name) ? $shop->branch_shop_name : '';
                            $shopModel->is_show = $shop->is_show;
                            $shopModel->created_at = time();
                            if ($shopModel->save()) {
                                $haveCategoryId = [];
                                foreach ($shop->category_infos as $category) {
                                    $categoryModel = Category::findOne($category->category_id);
                                    if (!$categoryModel) {
                                        $categoryModel = new Category(['scenario' => 'create']);
                                    } else {
                                        $categoryModel->scenario = 'update';
                                    }
                                    $categoryModel->id = $category->category_id;
                                    $categoryModel->name = $category->category_name;
                                    $categoryModel->level = $category->category_level;
                                    if(!$categoryModel->save()){
                                        Yii::error($categoryModel);
                                    }
                                    if ($categoryModel->id) {
                                        $categoryRelation = CategoryRelation::find()->where(['category_id' => $categoryModel->id, 'shop_id' => $shop->shop_id])->count();
                                        if (!$categoryRelation) {
                                            $categoryRelationModel = new CategoryRelation(['scenario' => 'create']);
                                            $categoryRelationModel->category_id = $category->category_id;
                                            $categoryRelationModel->shop_id = $shop->shop_id;
                                            if (!$categoryRelationModel->save()) {
                                                Yii::error($categoryRelationModel);
                                            }
                                        }
                                        $haveCategoryId[] = $category->category_id;
                                    } else {
                                        Yii::error($categoryModel);
                                    }
                                }
                                if ($haveCategoryId) {
                                    CategoryRelation::deleteAll(['AND',
                                        'shop_id = ' . $shop->shop_id,
                                        ['NOT IN', 'category_id', $haveCategoryId]
                                    ]);
                                }
                            } else {
                                Yii::error($shopModel);
                            }
                        }
                    }
                    $page++;
                    if ($resultAccept->$responseNode->total_page_no < $page) {
                        echo "error 111\r\n";
                        break;
                    }
                    sleep(5);
                } else {
                    echo "error 222\r\n";
                    continue;
                }
            }
        }

    }


    //店铺促销信息
    public function actionSyncShopPromoinfo()
    {
        $aop = AliOpen::getAopObj();
        $list = KoubeiServiceMarketOrder::find()->all();
        foreach ($list as $item) {
            $promoInfoRequest = new \KoubeiMarketingMallShoppromoinfoQueryRequest ();

            $count = Shop::find()->where(['merchant_pid' => $item->merchant_pid])->count();
            $pageOnePage = 50;
            $page = 1;
            while (true) {
                $limit = ($page - 1) * $pageOnePage;
                $data = Shop::find()->where(['merchant_pid' => $item->merchant_pid])->orderBy('shop_id asc')->limit($pageOnePage)->offset($limit)->all();
                $page++;
                if ($data) {
                    $shopIds = [];
                    foreach ($data as $shopOne) {
                        $shopIds[] = '"'.$shopOne->shop_id.'"';
                    }

                    if ($shopIds) {
                        $promoInfoRequest->setBizContent("{" . "\"mall_id\":\"" . $item->shop_id . "\"," .
                            " \"shop_ids\":[" .
                            implode(',',$shopIds).
                            " ]" .
                            " }");
                        $promoInfoResult = $aop->execute($promoInfoRequest, '', $item->member->app_auth_token);
                        $promoInfoResponseNode = str_replace(".", "_", $promoInfoRequest->getApiMethodName()) . "_response";
                        $promoInfoResultCode = $promoInfoResult->$promoInfoResponseNode->code;
                        if (!empty($promoInfoResultCode) && $promoInfoResultCode == 10000) {
                            if (isset($promoInfoResult->$promoInfoResponseNode->shop_promo_infos)) {
                                echo 'promo_infos ok'."\r\n";
                                foreach ($promoInfoResult->$promoInfoResponseNode->shop_promo_infos as $promoInfo) {
                                    $shopModel = Shop::findOne($promoInfo->shop_id);
                                    if ($shopModel) {
                                        $shopModel->scenario = 'update';
                                    }else{
                                        continue;
                                    }
                                    $shopModel->price_average = isset($promoInfo->price_average) ? $promoInfo->price_average : '';
                                    $shopModel->cuisine = isset($promoInfo->cuisine) ? $promoInfo->cuisine : '';
                                    $shopModel->shop_name = isset($promoInfo->shop_name) ? $promoInfo->shop_name : '';
                                    $shopModel->shop_logo_url = isset($promoInfo->shop_logo_url) ? $promoInfo->shop_logo_url : '';
                                    $shopModel->city_id = isset($promoInfo->city_id) ? $promoInfo->city_id : '';
                                    $shopModel->popularity_level = isset($promoInfo->popularity_level) ? $promoInfo->popularity_level : '';
                                    $shopModel->shop_recommend_one_tag_compose = isset($promoInfo->shop_recommend_one_tag_compose) ? $promoInfo->shop_recommend_one_tag_compose : '';
                                    $shopModel->head_shop_name = isset($promoInfo->head_shop_name) ? $promoInfo->head_shop_name : '';
                                    $shopModel->popularity = isset($promoInfo->popularity) ? $promoInfo->popularity : '';
                                    $shopModel->action_param = isset($promoInfo->action_param) ? $promoInfo->action_param : '';
                                    if(!$shopModel->save()){
                                        Yii::error($shopModel);
                                    }
                                    if (isset($promoInfo->voucher_info_list)) {
                                        echo 'voucher_ok'."\r\n";
                                        foreach ($promoInfo->voucher_info_list as $voucher) {
                                            $voucherModel = Voucher::findOne($voucher->item_id);
                                            if (!$voucherModel) {
                                                $voucherModel = new Voucher(['scenario' => 'create']);
                                                $voucherModel->item_id = $voucher->item_id;
                                            } else {
                                                $voucherModel->scenario = 'update';
                                            }
                                            $voucherModel->voucher_type = $voucher->voucher_type;
                                            $voucherModel->shop_name = $voucher->shop_name;
                                            $voucherModel->voucher_detail_url = $voucher->voucher_detail_url;
                                            $voucherModel->item_name = $voucher->item_name;
                                            $voucherModel->item_logo = isset($voucher->item_logo) ? $voucher->item_logo : '';
                                            $voucherModel->shop_id = $voucher->shop_id;
                                            $voucherModel->mall_id = $item->shop_id;
                                            if (!$voucherModel->save()) {
                                                Yii::error($voucherModel);
                                            }
                                        }
                                    }

                                }
                            }
                        } else {
                            var_dump($promoInfoResult);
                            echo "error 333\r\n";
                        }
                    }
                } else {
                    break;
                }
            }


        }

    }
}
