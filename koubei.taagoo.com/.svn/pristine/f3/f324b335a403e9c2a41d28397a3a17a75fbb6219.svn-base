<?php

namespace frontend\modules\shop\controllers;

use common\models\AliOssClient;
use common\models\PanoramicList;
use common\models\PanoramicMaterial;
use yii\web\Response;
use common\models\AliOpen;
use common\models\Panoramic;
use Yii;


/**
 * Default controller for the `shop` module
 */
class ShopAdminController extends BaseController
{
    public $layout = '/user_backend';
    public $enableCsrfValidation = false;

    /**
     * 店铺管理
     * @param $id string 商铺ID
     * @return string
     */
    public function actionIndex($id)
    {
        $user = Yii::$app->user->Identity;

        // 验证商铺 信息 等等
        // 获取商铺信息 后期改为从 order 表中获取数据
        //$shop = AliOpen::getOfflineMarketShopQuerydetailRequest($user->app_auth_token, $id);
        $shop = (object)array('address' => '上海市浦东新校区蚂蚁弄XXX号', 'shop_name' => 'shopName14942420737071'); // 假数据
        $shop->shop_id = $id;
        return $this->render('index', [
            'shop' => $shop
        ]);
    }

    /**
     * 获取单个店铺的全景
     */
    public function actionGetPanoramic()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $shop_id = Yii::$app->request->post('shop_id');
        $return = ['status' => 0, 'data' => []];
        if ($shop_id) {
            $panoramic = Panoramic::find()->where(['shop_id' => $shop_id, 'status' => 1])->one();
            if ($panoramic) {
                $panoramicList = PanoramicList::find()->where(['panoramic_id' => $panoramic->id, 'status' => 1])->limit(8);
                if ($panoramicList->count() > 0) {
                    $data = [
                        'panoramic_id' => $panoramic->id,
                        'scene_data' => []
                    ];
                    foreach ($panoramicList->all() as $listKey => $listVal) {
                        $panoramicMaterialModel = $listVal->panoramicMaterial;
                        $data['scene_data'][$listKey]['scene_id'] = $listVal->panoramic_material_id;
                        $data['scene_data'][$listKey]['title'] = $listVal->getTitle()['default'];
                        $data['scene_data'][$listKey]['thumb'] = $panoramicMaterialModel->getThumbs()['default'];
                        $data['scene_data'][$listKey]['status'] = $panoramicMaterialModel->status;
                    }
                    $return['status'] = 1;
                    $return['data'] = $data;
                }
            }
        }
        return $return; // 没有数据
    }

    /**
     * 上传获取Policy，直接传递到alioss
     */
    public function actionGetPolicy()
    {
        $params = Yii::$app->params['alioss'];
        $AliOssClient = AliOssClient::getInstance();
        $type = Yii::$app->request->get('type');
        $fileName = mt_rand(1, 999) . uniqid(Yii::$app->user->id);
        $type_arr = [
            'upload_pano' => [//全景图
                'dir' => 'vr_cloud/pano_private/' . date('Y') . '/' . date('m') . '/' . date('d') . '/' . Yii::$app->user->id . '/' . $fileName,
                'endpoint' => 'pano_endpoint',
            ],
        ];
        if (isset($type_arr[$type])) {
            $res = $AliOssClient->getPolicy([
                'dir' => $type_arr[$type]['dir'],
                'endpoint' => isset($type_arr[$type]['endpoint']) ? $type_arr[$type]['endpoint'] : false,
                'callback_url' => Yii::$app->params['line_www_domain'] . '/interface/oss-upload-callback.html',
                'callbackBody' => 'filename=${object}&size=${size}&mimeType=${mimeType}&height=${imageInfo.height}&width=${imageInfo.width}',
            ]);
            $res['file_name'] = $fileName;
            return is_array($res) ? json_encode($res) : json_encode([]);
        }
        return json_encode([]);
    }

    /**
     * 添加动景图
     * @return mixed
     */
    public function actionAddMaterial()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $return = ['status' => 0, 'data' => []];
        if (Yii::$app->request->post()) {
            $post = Yii::$app->request;
            $transaction = Yii::$app->db->beginTransaction();
            try {
                $panoramicModel = Panoramic::createPanoramic($post->post('shop_id'));
                if ($panoramicModel === false){
                    throw new \Exception('创建动景组失败');
                }
                $materialModel = PanoramicMaterial::addMaterial($post);
                if ($materialModel === false){
                    throw new \Exception('创建动景失败');
                }
                $listModel = PanoramicList::createMaterial($panoramicModel->id, $materialModel->id);
                if ($listModel === false){
                    throw new \Exception('创建动景失败');
                }
                $transaction->commit();
                $return['status'] = 1;
                $return['data']['scene_id'] = $materialModel->id;
            }catch (\Exception $e) {
                $error = $e->getMessage();
                $transaction->rollBack();
                $return['msg'] = $error;
            }
        }
        return $return;
    }
}
